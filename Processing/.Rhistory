W3_robustness_b = W3_robustness_b %>% dplyr::select(-id)
#Fitting two mgm
set.seed(1)
FitW3_robustness_a <- mgm(W3_robustness_a, type, level, k = 2, binarySign = TRUE)
set.seed(1)
FitW3_robustness_b <- mgm(W3_robustness_b, type, level, k = 2, binarySign = TRUE)
#Network Comparison Test between the two mgm
set.seed(1)
robustness_a_b = NCT(W3_robustness_a, W3_robustness_b, it = 1000,
test.edges=TRUE, edges="all",
progressbar=TRUE, p.adjust.methods= c("bonferroni"),
test.centrality=TRUE,
centrality=c("strength"),nodes="all")
#Visualize results of edge tests
inputNCTgraph <- FitW3_robustness_a$pairwise$wadj - FitW3_robustness_b$pairwise$wadj
inputNCTgraph[upper.tri(inputNCTgraph)][which(robustness_a_b$einv.pvals$`p-value` >= .05)] <- 0
inputNCTgraph <- forceSymmetric(inputNCTgraph)
pdf(here("Output", "Supplement", "nct.pdf"))
nct_plot = qgraph(inputNCTgraph, labels = shortnames, edge.labels = TRUE)
dev.off()
#Visualize results of centrality tests
#Calculate strength
Graph_robustness_a <-qgraph(FitW3_robustness_a$pairwise$wadj, labels = shortnames)
cent_robustness_a <- centralityTable(Graph_robustness_a)
Graph_robustness_b <-qgraph(FitW3_robustness_b$pairwise$wadj, labels = shortnames)
cent_robustness_b <- centralityTable(Graph_robustness_b)
#isolate what is statistically different
robustness_a_b$diffcen.pval #no differences are statistically significant
robustness_a_b$diffcen.real #raw differences in centrality
#model selection
backbone.suggest(FitW3$pairwise$wadj)
# application of the disparity filter
backbone_matrix <- disparity(
inputGraphMGM,
alpha = 0.05,
signed = FALSE,
mtc = "none",
class = "original",
narrative = TRUE)
#plot
set.seed(100)
GraphMGM<-qgraph(backbone_matrix,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
details = FALSE, vsize=6.0, shape = shapes,
groups=Totalgroup_comm, color= Totalgroup_cols,
legend = TRUE, legend.cex = 0.35, borders = FALSE,
filetype="jpg", filename=here("Output", "Article", "backbone.jpg"))
#Fitting logistic regressions
model_vac_bad <- glm( hesitancy ~ vac_bad + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_vac_ob <- glm( hesitancy ~ vac_ob + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_worry <- glm( hesitancy ~ worry + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_risk <- glm( hesitancy ~ risk + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_conspiracy <- glm( hesitancy ~ conspiracy + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_nat <- glm( hesitancy ~ nat + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_h_locus <- glm( hesitancy ~ h_locus + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_he_eco <- glm( hesitancy ~ he_eco + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_PTV_L <- glm( hesitancy ~ PTV_L + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_PTV_5SM <- glm( hesitancy ~ PTV_5SM + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_PTV_BOI <- glm( hesitancy ~ PTV_BOI + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_tr_sci <- glm( hesitancy ~ tr_sci + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_pray <- glm( hesitancy ~ pray + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_media <- glm( hesitancy ~ media + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_low_comp <- glm( hesitancy ~ low_comp + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_distrust_gov <- glm( hesitancy ~ distrust_gov + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
model_distrust_inst <- glm( hesitancy ~ distrust_inst + sex + age + educ + reg + eco_insec,
data = W3, family = binomial)
#Additional model for final table
model_educ <- glm( hesitancy ~ educ + sex + age + reg + eco_insec,
data = W3, family = binomial)
#coeff
coeff_educ =  exp(extract_numeric(model_educ$coefficients[2]))
#significance
summary(model_educ)$coeff[-1,4] < 0.05
#model_vac_bad
tab_model(list(model_vac_bad),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("vac_bad"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_vac_bad.doc")
)
#model_vac_ob
tab_model(list(model_vac_ob),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("vac_ob"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_vac_ob.doc")
)
#model_worry
tab_model(list(model_worry),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("worry"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_worry.doc")
)
#model_risk
tab_model(list(model_risk),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("risk"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_risk.doc")
)
#model_conspiracy
tab_model(list(model_conspiracy),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("conspiracy"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_conspiracy.doc")
)
#model_nat
tab_model(list(model_nat),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("nat"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_nat.doc")
)
#model_h_locus
tab_model(list(model_h_locus),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("h_locus"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_h_locus.doc")
)
#model_he_eco
tab_model(list(model_he_eco),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("he_eco"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_he_eco.doc")
)
#model_PTV_L
tab_model(list(model_PTV_L),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("PTV_L"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_PTV_L.doc")
)
#model_PTV_5SM
tab_model(list(model_PTV_5SM),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("PTV_5SM"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_PTV_5SM.doc")
)
#model_PTV_BOI
tab_model(list(model_PTV_BOI),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("PTV_BOI"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_PTV_BOI.doc")
)
#model_tr_sci
tab_model(list(model_tr_sci),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("tr_sci"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_tr_sci.doc")
)
#model_pray
tab_model(list(model_pray),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("pray"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_pray.doc")
)
#model_media
tab_model(list(model_media),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("media"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_media.doc")
)
#model_low_comp
tab_model(list(model_low_comp),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("low_comp"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_low_comp.doc")
)
#model_distrust_gov
tab_model(list(model_distrust_gov),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("distrust_gov"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_distrust_gov.doc")
)
#model_distrust_inst
tab_model(list(model_distrust_inst),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("distrust_inst"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_distrust_inst.doc")
)
#model_vac_bad
tab_model(list(model_vac_bad),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("vac_bad"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_vac_bad.doc")
)
#Additional model for final table
tab_model(list(model_educ),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("educ"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "Logit regression model on vaccine hesitancy",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Supplement", "regressions", "model_educ.doc")
)
#Gathering coefficients
coeff = extract_numeric(model_vac_bad$coefficients[2])
coeff[2] = extract_numeric(model_vac_ob$coefficients[2])
coeff[3] = extract_numeric(model_worry$coefficients[2])
coeff[4] = extract_numeric(model_risk$coefficients[2])
coeff[5] = extract_numeric(model_conspiracy$coefficients[2])
coeff[6] = extract_numeric(model_nat$coefficients[2])
coeff[7] = extract_numeric(model_h_locus$coefficients[2])
coeff[8] = extract_numeric(model_he_eco$coefficients[2])
coeff[9] = extract_numeric(model_PTV_L$coefficients[2])
coeff[10] = extract_numeric(model_PTV_5SM$coefficients[2])
coeff[11] = extract_numeric(model_PTV_BOI$coefficients[2])
coeff[12] = extract_numeric(model_tr_sci$coefficients[2])
coeff[13] = extract_numeric(model_pray$coefficients[2])
coeff[14] = extract_numeric(model_media$coefficients[2])
coeff[15] = extract_numeric(model_low_comp$coefficients[2])
coeff[16] = extract_numeric(model_distrust_gov$coefficients[2])
coeff[17] = extract_numeric(model_distrust_inst$coefficients[2])
#Transform in odds ratio
coeff_exp = unlist(lapply(coeff, exp))
#Significance
summary(model_vac_bad)$coeff[-1,4] < 0.05
summary(model_vac_ob)$coeff[-1,4] < 0.05
summary(model_worry)$coeff[-1,4] < 0.05 #not significant
summary(model_risk)$coeff[-1,4] < 0.05
summary(model_conspiracy)$coeff[-1,4] < 0.05
summary(model_nat)$coeff[-1,4] < 0.05
summary(model_h_locus)$coeff[-1,4] < 0.05
summary(model_he_eco)$coeff[-1,4] < 0.05
summary(model_PTV_L)$coeff[-1,4] < 0.05
summary(model_PTV_5SM)$coeff[-1,4] < 0.05 #not significant
summary(model_PTV_BOI)$coeff[-1,4] < 0.05
summary(model_tr_sci)$coeff[-1,4] < 0.05
summary(model_pray)$coeff[-1,4] < 0.05 #not significant
summary(model_media)$coeff[-1,4] < 0.05 #not significant
summary(model_low_comp)$coeff[-1,4] < 0.05
summary(model_distrust_gov)$coeff[-1,4] < 0.05
summary(model_distrust_inst)$coeff[-1,4] < 0.05
#vector for significance
Significance = rep(c("Significant"),17)
Significance[3] = "Not significant"
Significance[10] = "Not significant"
Significance[13] = "Not significant"
Significance[14] = "Not significant"
#Gatering strength scores
strength = centMGM %>%
filter(measure=="Strength") %>%
dplyr::select(value) %>%
filter(!row_number() %in% c(15:20))
cent_all = centMGM %>%
filter(measure=="Strength") %>%
dplyr::select(value, node) %>%
mutate_if(is.numeric, ~round(., 2))
#Gatering degree
degree_cent_graph = degree_cent[-c(15:20)]
#Gathering names
names = shortnames
names = names[-c(15:20)]
#Merging into a df1 (Reported in Supplement S1)
scatterplot = data.frame(names, coeff_exp, strength, Significance) %>%
rename(strength = value)
scatterplot$names = as.factor(scatterplot$names)
scatterplot$coeff_exp = as.numeric(scatterplot$coeff_exp)
scatterplot$strength = as.numeric(scatterplot$strength)
scatterplot$Significance = as.factor(scatterplot$Significance)
#Merging into a df2
scatterplot_degree = data.frame(names, coeff_exp, degree_cent_graph, Significance)
scatterplot_degree$degree_cent_graph = as.numeric(scatterplot_degree$degree_cent_graph)
print(scatterplot_degree)
#Strength (Article)
graph_strength = ggplot(scatterplot, aes(x=strength, y=coeff_exp, label = names)) +
geom_point((aes(color=Significance))) + theme_nice() +
geom_smooth(method=lm, se = FALSE, linetype = "dotted", color = "#DCDCDC") +
geom_text_repel(size = 3) +
xlab("Strength centrality") + ylab("Regression coefficient") +
scale_fill_discrete(labels=c('label1', 'label2'))
ggsave(here("Output", "Article", "graph_strength.jpg"), graph_strength, height = 5, width = 8)
#Degree (Supplement S1)
graph_degree = ggplot(scatterplot_degree, aes(x=degree_cent_graph, y=coeff_exp, label = names)) +
geom_point((aes(color=Significance))) + theme_nice() +
geom_smooth(method=lm, se = FALSE, linetype = "dotted", color = "#DCDCDC") +
geom_text_repel(size = 3) +
xlab("Degree centrality") + ylab("Regression coefficient") +
scale_fill_discrete(labels=c('label1', 'label2'))
ggsave(here("Output", "Supplement", "graph_degree.jpg"), graph_degree, height = 5, width = 8)
final_tab = scatterplot %>%
mutate(degree = scatterplot_degree$degree_cent_graph) %>%
add_row(names = "educ", coeff_exp = 1.764247, strength = 1.0869328,
Significance = "Significant", degree = 10) %>%
filter(names %in% c("vac_free","vac_bad","low_comp","conspiracy","nat","educ")) %>%
mutate(edge_weight=c(0.95, 0.34, 0.34, 0.12, 0.07, 0.07)) %>%
relocate(Significance, .after = edge_weight)
final_tab
#conversion of type
final_tab$names = as.factor(final_tab$names)
final_tab$coeff_exp = as.numeric(final_tab$coeff_exp)
final_tab$strength = as.numeric(final_tab$strength)
final_tab$degree = as.numeric(final_tab$degree)
final_tab$edge_weight = as.numeric(final_tab$edge_weight)
final_tab$Significance = as.factor(final_tab$Significance)
#Z scores
final_tab_z = final_tab %>%
mutate(coeff_exp = (coeff_exp - mean(coeff_exp))/sd(coeff_exp),
strength = (strength - mean(strength))/sd(strength),
degree = (degree - mean(degree))/sd(degree),
edge_weight = (edge_weight - mean(edge_weight))/sd(edge_weight)) %>%
mutate_if(is.numeric, ~round(., 2)) %>%
arrange(desc(coeff_exp)) %>%
dplyr::select(names, edge_weight, coeff_exp, strength, degree, Significance)
final_tab
final_tab_z
final_tab = scatterplot %>%
mutate(degree = scatterplot_degree$degree_cent_graph) %>%
add_row(names = "educ", coeff_exp = 1.764247, strength = 1.0869328,
Significance = "Significant", degree = 10) %>%
filter(names %in% c("vac_free","vac_bad","low_comp","conspiracy","nat","educ")) %>%
mutate(edge_weight=c(0.95, 0.34, 0.34, 0.12, 0.07, 0.07)) %>%
relocate(Significance, .after = edge_weight)
final_tab
final_tab = scatterplot %>%
mutate(degree = scatterplot_degree$degree_cent_graph) %>%
add_row(names = "educ", coeff_exp = 1.764247, strength = 1.0869328,
Significance = "Significant", degree = 10) %>%
filter(names %in% c("vac_free","vac_bad","low_comp","conspiracy","nat","educ")) %>%
arrange(desc(coeff_exp)) %>%
mutate(edge_weight=c(0.95, 0.34, 0.34, 0.12, 0.07, 0.07)) %>%
relocate(Significance, .after = edge_weight)
final_tab
scatterplot
final_tab = scatterplot %>%
mutate(degree = scatterplot_degree$degree_cent_graph)
final_tab
final_tab = scatterplot %>%
mutate(degree = scatterplot_degree$degree_cent_graph) %>%
add_row(names = "educ", coeff_exp = 1.764247, strength = 1.0869328,
Significance = "Significant", degree = 10)
final_tab
final_tab = scatterplot %>%
mutate(degree = scatterplot_degree$degree_cent_graph) %>%
add_row(names = "educ", coeff_exp = 1.764247, strength = 1.0869328,
Significance = "Significant", degree = 10) %>%
filter(names %in% c("vac_free","vac_bad","low_comp","conspiracy","nat","educ"))
final_tab
final_tab = scatterplot %>%
mutate(degree = scatterplot_degree$degree_cent_graph) %>%
add_row(names = "educ", coeff_exp = 1.764247, strength = 1.0869328,
Significance = "Significant", degree = 10) %>%
filter(names %in% c("vac_free","vac_bad","low_comp","conspiracy","nat","educ")) %>%
mutate(edge_weight=c(0.34, 0.95, 0.12, 0.07, 0.34, 0.07)) %>% #adding edge weights
relocate(Significance, .after = edge_weight)
final_tab
final_tab$names = as.factor(final_tab$names)
final_tab$coeff_exp = as.numeric(final_tab$coeff_exp)
final_tab$strength = as.numeric(final_tab$strength)
final_tab$degree = as.numeric(final_tab$degree)
final_tab$edge_weight = as.numeric(final_tab$edge_weight)
final_tab$Significance = as.factor(final_tab$Significance)
final_tab_z = final_tab %>%
mutate(coeff_exp = (coeff_exp - mean(coeff_exp))/sd(coeff_exp),
strength = (strength - mean(strength))/sd(strength),
degree = (degree - mean(degree))/sd(degree),
edge_weight = (edge_weight - mean(edge_weight))/sd(edge_weight)) %>%
mutate_if(is.numeric, ~round(., 2)) %>%
arrange(desc(coeff_exp)) %>%
dplyr::select(names, coeff_exp, edge_weight, strength, degree, Significance)
final_tab
final_tab_z
#Degree (Supplement S1)
graph_degree = ggplot(scatterplot_degree, aes(x=degree_cent_graph, y=coeff_exp, label = names)) +
geom_point((aes(color=Significance))) + theme_nice() +
geom_smooth(method=lm, se = FALSE, linetype = "dotted", color = "#DCDCDC") +
geom_text_repel(size = 3) +
xlab("Degree centrality") + ylab("Regression coefficient") +
scale_fill_discrete(labels=c('label1', 'label2'))
ggsave(here("Output", "Supplement", "graph_degree.jpg"), graph_degree, height = 5, width = 8)
