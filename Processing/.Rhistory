"Trust in health syst", "Religion, pray", "Media", "Sex", "Age", "Education",
"Rural region", "Economic insecurity", "Vaccine hesitancy", "Institutional trust",
"Compliance")
# Community stability function
communityStability <- function(data, type, level, iterations)
{
communityMemberships <- list()
for (i in 1:iterations)
{
fitGraph <- mgm(data, type, level, k = 2, verbatim = TRUE)
iGraph<- graph_from_adjacency_matrix(abs
(fitGraph$pairwise$wadj), "undirected", weighted =
TRUE)
communityMemberships[[i]] <- cluster_walktrap(iGraph)$membership
}
communityOverlap <- matrix(NA, length(data), length(data))
for(j in 1:length(data))
{
overlapPerNode <- matrix(NA, iterations, ncol(communityOverlap))
for(k in 1: iterations)
{
overlapPerNode[k,] <- as.numeric(communityMemberships[[k]][j] == communityMemberships[[k]])
}
communityOverlap[j,] <- apply(overlapPerNode, 2, mean)
}
diag(communityOverlap) <- 0
return(list(communityMemberships = communityMemberships, communityOverlap = communityOverlap))
}
set.seed(1)
FitW3 <- mgm(W3, type, level, k = 2, binarySign = TRUE)
View(W3)
library("pacman")
p_load(tidyverse, here, sjlabelled, stringr, glue, janitor, haven, stargazer,
ltm, skimr)
#Load database
#response_original = read_dta(here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.dta"))  %>%
#clean_names()
#Transform in RDS
#saveRDS(response_original, here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.rds"))
#Import RDS
response_original = read_rds(here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.rds"))  %>%
clean_names()
# 10 November to 22 December 2021
#Select and rename variables
W3 = response_original %>%
filter(info_wave==3) %>%
dplyr::select(c(v2,v3,j5_01,v1,f10,f3,f9,h1_04,j4bis_b,b2_03,b2_06,b2_07,d5,d1,
e4_bis,k3_03,k3_04,k3_05,e2_01,e2_04,j5_02,e3,g7,c5,s1,s2,
s9,s8,c1)) %>%
mutate(across(v2:c1, ~replace(., .>97 , NA))) %>%
na.omit()
colnames(W3) = c("vac","vac_int","vac_bad","vac_ob","worry","risk","conspiracy",
"nat","h_locus","comp_dist", "comp_mask","comp_hand","he_eco",
"judg_gov_covid","judg_gov","PTV_L","PTV_5SM","PTV_BOI","tr_par",
"tr_EU","tr_sci","tr_h","pray","media","sex","age","educ",
"reg","eco_insec")
#combine vac_int and vac in INT_VAC
W3 = W3 %>%
mutate(hesitancy = case_when(
(vac_int < 3  | vac == 1)~ 0,
(vac_int > 2 & vac == 2)~ 1,)) %>%
dplyr::select(-c(vac_int, vac))
#invert polarity and recode
W3 = W3 %>%
mutate((across(vac_bad:vac_ob, ~ 6 - .)), #inverted polarity
worry = ifelse(worry<=2, 0, 1),
(across(risk,  ~ 6 - .)), #inverted
conspiracy = ifelse(conspiracy<3, 1, 0),
(across(he_eco,  ~ 11 - .)), #inverted
(across(tr_sci,  ~ 6 - .)), #inverted
(across(pray,  ~ 6 - .)), #inverted
media = ifelse(media>=4 & media<=7, 1, 0),
sex = ifelse(sex==2, 0, 1),
educ = ifelse(educ<5, 0, 1),
reg = ifelse(reg<=3, 1, 0),
eco_insec = ifelse(eco_insec<=2, 0, 1))
#PCA
#compliance
compliance = data.frame(W3$comp_mask, W3$comp_hand, W3$comp_dist)
compliance = na.omit(compliance)
pr_compliance <- princomp(na.omit(compliance), cor = TRUE)
pr_compliance #unidimensional
W3$comp = apply(W3[1:2], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(comp_hand, comp_mask, comp_dist))
#Gov
gov = data.frame(W3$judg_gov_covid, W3$judg_gov)
gov = na.omit(gov)
pr_gov <- princomp(na.omit(gov), cor = TRUE)
pr_gov #unidimensional
W3$gov = apply(W3[1:2], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(judg_gov_covid, judg_gov))
#inst_tr (excluded from core)
inst_tr = data.frame(W3$tr_par, W3$tr_EU)
inst_tr = na.omit(inst_tr)
pr_inst_tr <- princomp(na.omit(inst_tr), cor = TRUE)
pr_inst_tr #unidimensional
W3$inst_tr = apply(W3[2:3], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(tr_par, tr_EU))
#alphas
cronbach.alpha(compliance, CI=TRUE, standardized=TRUE)
cronbach.alpha(gov, CI=TRUE, standardized=TRUE)
cronbach.alpha(inst_tr, CI=TRUE, standardized=TRUE)
W3_core = W3 %>%
dplyr::select(-c(worry, inst_tr, vac_ob))
W3_core$comp = W3$comp
W3_core$gov = W3$gov
summary_vaccine  = as.data.frame(skim(W3))
stargazer(as.data.frame(W3), type = "text", nobs = TRUE)
saveRDS(W3, here("Input", "W3.rds"))
saveRDS(W3_core, here("Input", "W3_core.rds"))
library("pacman")
p_load(tidyverse, here, sjlabelled, stringr, glue, janitor, haven, stargazer,
ltm, skimr)
#Load database
#response_original = read_dta(here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.dta"))  %>%
#clean_names()
#Transform in RDS
#saveRDS(response_original, here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.rds"))
#Import RDS
response_original = read_rds(here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.rds"))  %>%
clean_names()
# 10 November to 22 December 2021
#Select and rename variables
W3 = response_original %>%
filter(info_wave==3) %>%
dplyr::select(c(v2,v3,j5_01,v1,f10,f3,f9,h1_04,j4bis_b,b2_03,b2_06,b2_07,d5,d1,
e4_bis,k3_03,k3_04,k3_05,e2_01,e2_04,j5_02,e3,g7,c5,s1,s2,
s9,s8,c1)) %>%
mutate(across(v2:c1, ~replace(., .>97 , NA))) %>%
na.omit()
colnames(W3) = c("vac","vac_int","vac_bad","vac_ob","worry","risk","conspiracy",
"nat","h_locus","comp_dist", "comp_mask","comp_hand","he_eco",
"judg_gov_covid","judg_gov","PTV_L","PTV_5SM","PTV_BOI","tr_par",
"tr_EU","tr_sci","tr_h","pray","media","sex","age","educ",
"reg","eco_insec")
#combine vac_int and vac in INT_VAC
W3 = W3 %>%
mutate(hesitancy = case_when(
(vac_int < 3  | vac == 1)~ 0,
(vac_int > 2 & vac == 2)~ 1,)) %>%
dplyr::select(-c(vac_int, vac))
#invert polarity and recode
W3 = W3 %>%
mutate((across(vac_bad:vac_ob, ~ 6 - .)), #inverted polarity
worry = ifelse(worry<=2, 0, 1),
(across(risk,  ~ 6 - .)), #inverted
conspiracy = ifelse(conspiracy<3, 1, 0),
(across(he_eco,  ~ 11 - .)), #inverted
(across(tr_sci,  ~ 6 - .)), #inverted
(across(pray,  ~ 6 - .)), #inverted
media = ifelse(media>=4 & media<=7, 1, 0),
sex = ifelse(sex==2, 0, 1),
educ = ifelse(educ<5, 0, 1),
reg = ifelse(reg<=3, 1, 0),
eco_insec = ifelse(eco_insec<=2, 0, 1))
compliance = data.frame(W3$comp_mask, W3$comp_hand, W3$comp_dist)
compliance = na.omit(compliance)
pr_compliance <- princomp(na.omit(compliance), cor = TRUE)
pr_compliance
View(W3)
names(W3)
W3$comp = apply(W3[8:10], 1, mean, na.rm = TRUE)
View(W3)
W3 = W3 %>%
dplyr::select(-c(comp_hand, comp_mask, comp_dist))
View(W3)
gov = data.frame(W3$judg_gov_covid, W3$judg_gov)
gov = na.omit(gov)
pr_gov <- princomp(na.omit(gov), cor = TRUE)
pr_gov
View(W3)
names(W3)
W3$gov = apply(W3[9:10], 1, mean, na.rm = TRUE)
View(W3)
W3 = W3 %>%
dplyr::select(-c(judg_gov_covid, judg_gov))
inst_tr = data.frame(W3$tr_par, W3$tr_EU)
inst_tr = na.omit(inst_tr)
pr_inst_tr <- princomp(na.omit(inst_tr), cor = TRUE)
pr_inst_tr
View(W3)
names(W3)
W3$inst_tr = apply(W3[12:13], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(tr_par, tr_EU))
W3_core = W3 %>%
dplyr::select(-c(worry, inst_tr, vac_ob))
W3_core$comp = W3$comp
W3_core$gov = W3$gov
View(W3_core)
library("pacman")
p_load(tidyverse, here, sjlabelled, stringr, glue, janitor, haven, stargazer,
ltm, skimr)
#Load database
#response_original = read_dta(here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.dta"))  %>%
#clean_names()
#Transform in RDS
#saveRDS(response_original, here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.rds"))
#Import RDS
response_original = read_rds(here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.rds"))  %>%
clean_names()
# 10 November to 22 December 2021
#Select and rename variables
W3 = response_original %>%
filter(info_wave==3) %>%
dplyr::select(c(v2,v3,j5_01,v1,f10,f3,f9,h1_04,j4bis_b,b2_03,b2_06,b2_07,d5,d1,
e4_bis,k3_03,k3_04,k3_05,e2_01,e2_04,j5_02,e3,g7,c5,s1,s2,
s9,s8,c1)) %>%
mutate(across(v2:c1, ~replace(., .>97 , NA))) %>%
na.omit()
colnames(W3) = c("vac","vac_int","vac_bad","vac_ob","worry","risk","conspiracy",
"nat","h_locus","comp_dist", "comp_mask","comp_hand","he_eco",
"judg_gov_covid","judg_gov","PTV_L","PTV_5SM","PTV_BOI","tr_par",
"tr_EU","tr_sci","tr_h","pray","media","sex","age","educ",
"reg","eco_insec")
#combine vac_int and vac in INT_VAC
W3 = W3 %>%
mutate(hesitancy = case_when(
(vac_int < 3  | vac == 1)~ 0,
(vac_int > 2 & vac == 2)~ 1,)) %>%
dplyr::select(-c(vac_int, vac))
#invert polarity and recode
W3 = W3 %>%
mutate((across(vac_bad:vac_ob, ~ 6 - .)), #inverted polarity
worry = ifelse(worry<=2, 0, 1),
(across(risk,  ~ 6 - .)), #inverted
conspiracy = ifelse(conspiracy<3, 1, 0),
(across(he_eco,  ~ 11 - .)), #inverted
(across(tr_sci,  ~ 6 - .)), #inverted
(across(pray,  ~ 6 - .)), #inverted
media = ifelse(media>=4 & media<=7, 1, 0),
sex = ifelse(sex==2, 0, 1),
educ = ifelse(educ<5, 0, 1),
reg = ifelse(reg<=3, 1, 0),
eco_insec = ifelse(eco_insec<=2, 0, 1))
#PCA
#compliance
compliance = data.frame(W3$comp_mask, W3$comp_hand, W3$comp_dist)
compliance = na.omit(compliance)
pr_compliance <- princomp(na.omit(compliance), cor = TRUE)
pr_compliance #unidimensional
W3$comp = apply(W3[8:10], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(comp_hand, comp_mask, comp_dist))
#Gov
gov = data.frame(W3$judg_gov_covid, W3$judg_gov)
gov = na.omit(gov)
pr_gov <- princomp(na.omit(gov), cor = TRUE)
pr_gov #unidimensional
W3$gov = apply(W3[9:10], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(judg_gov_covid, judg_gov))
#inst_tr (excluded from core)
inst_tr = data.frame(W3$tr_par, W3$tr_EU)
inst_tr = na.omit(inst_tr)
pr_inst_tr <- princomp(na.omit(inst_tr), cor = TRUE)
pr_inst_tr #unidimensional
W3$inst_tr = apply(W3[12:13], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(tr_par, tr_EU))
#alphas
cronbach.alpha(compliance, CI=TRUE, standardized=TRUE)
cronbach.alpha(gov, CI=TRUE, standardized=TRUE)
cronbach.alpha(inst_tr, CI=TRUE, standardized=TRUE)
W3_core = W3 %>%
dplyr::select(-c(worry, inst_tr, vac_ob))
W3_core$comp = W3$comp
W3_core$gov = W3$gov
summary_vaccine  = as.data.frame(skim(W3))
stargazer(as.data.frame(W3), type = "text", nobs = TRUE)
saveRDS(W3, here("Input", "W3.rds"))
saveRDS(W3_core, here("Input", "W3_core.rds"))
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(tidyverse, here, sjlabelled, stringr, glue, EGAnet, janitor, haven,
ggpubr, gridExtra, dplyr, GGally, qgraph, sjmisc, igraph,
imager, grid, psych, stargazer, mgm, patchwork, ggplot2,
NetworkComparisonTest, Matrix, bootnet, matrixcalc, openxlsx, devtools)
W3 = readRDS((here("Input", "W3.rds")))
## network objects
type <-c("g","g","c","g","c","g","g","g","g","g","g","g","g","g","c","c","g","c",
"g","c","c","g","g","g")
level <-c("1","1","2","1","2","1","1","1","1","1","1","1","1","1","2","2","1","2",
"1","2","2","1","1","1")
shortnames <- c(
"vac_bad",
"vac_ob",
"worry",
"risk",
"conspiracy",
"nat",
"h_locus",
"he_eco",
"PTV_L",
"PTV_5SM",
"PTV_BOI",
"tr_sci",
"tr_h",
"pray",
"media",
"sex",
"age",
"educ",
"reg",
"eco_insec",
"hesitancy",
"comp",
"gov",
"inst_tr")
longnames <- c(
"Vaccine bad for health",
"Vaccination obligation",
"Worry about infection",
"Risk perception",
"Origin of virus",
"Naturopaty",
"Health locus of control",
"Public health vs economy",
"Propensity to vote for L",
"Propensity to vote for 5SM",
"Propensity to vote for BOI",
"Trust in science",
"trust in health syst",
"religion, pray",
"media",
"Sex",
"Age",
"Education",
"rural region",
"Economic insecurity",
"Vaccine hesitancy",
"Compliance to preventive behaviors",
"Approval og Government",
"Institutional trust")
communityStability <- function(data, type, level, iterations)
{
communityMemberships <- list()
for (i in 1:iterations)
{
fitGraph <- mgm(data, type, level, k = 2, verbatim = TRUE)
iGraph<- graph_from_adjacency_matrix(abs
(fitGraph$pairwise$wadj), "undirected", weighted =
TRUE)
communityMemberships[[i]] <- cluster_walktrap(iGraph)$membership
}
communityOverlap <- matrix(NA, length(data), length(data))
for(j in 1:length(data))
{
overlapPerNode <- matrix(NA, iterations, ncol(communityOverlap))
for(k in 1: iterations)
{
overlapPerNode[k,] <- as.numeric(communityMemberships[[k]][j] == communityMemberships[[k]])
}
communityOverlap[j,] <- apply(overlapPerNode, 2, mean)
}
diag(communityOverlap) <- 0
return(list(communityMemberships = communityMemberships, communityOverlap = communityOverlap))
}
set.seed(1)
FitW3 <- mgm(W3, type, level, k = 2, binarySign = TRUE)
View(W3)
# group variables based on TH
Totalgroup_comm <- list(
" "=c(1,2),
" "=c(3:8, 22),
" "=c(9:20, 23,24),
" "=c(21))
# define nice colors
Totalgroup_cols <- c("#4EB64A","#F4AD0A","#54C2F2", "#9370DB")
#enables theme colorblind because we don't need to specify edge.color
inputGraphMGM <- FitW3$pairwise$wadj
signsGraphMGM <- FitW3$pairwise$signs
signsGraphMGM[which(is.na(signsGraphMGM))] <- 1
inputGraphMGM <- inputGraphMGM*signsGraphMGM
# refined, no minimum
pdf(file = '../Output/complete/MGM_nomin.pdf',paper = "USr", height = 9, width = 12)
GraphMGM<-qgraph(inputGraphMGM,
layout = "spring", theme = "Borkulo",
labels = shortnames, nodeNames = longnames,
cut = 0.10, maximum = 1,
details = FALSE, vsize=6.0,
groups=Totalgroup_comm, color= Totalgroup_cols,
legend = TRUE, legend.cex = 0.4)
dev.off()
# refined,  minimum = 0.5
pdf(file = '../Output/complete/MGM_min_05.pdf',paper = "USr", height = 9, width = 12)
GraphMGM<-qgraph(inputGraphMGM,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
cut = 0.10, minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=Totalgroup_comm, color= Totalgroup_cols,
legend = TRUE, legend.cex = 0.4)
dev.off()
# refined,  minimum = 0.10
pdf(file = '../Output/complete/MGM_min_10.pdf',paper = "USr", height = 9, width = 12)
GraphMGM<-qgraph(inputGraphMGM,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
cut = 0.10, minimum = 0.10, maximum = 1,
details = FALSE, vsize=6.0, legend = TRUE,
groups=Totalgroup_comm, color= Totalgroup_cols,
legend.cex = 0.4)
dev.off()
#graph with complete labels for centrality plot
GraphMGMCENT<-qgraph(inputGraphMGM,
layout = "spring", theme = "colorblind",
labels = longnames, minimum = 0,
cut = 0.10, maximum = 1, details = TRUE,
legend = FALSE)
#centrality Total
centMGM <- centralityTable(GraphMGMCENT,standardized = FALSE)
#CentralityPlot Total
pdf('../Output/complete/Centrality_Table.pdf')
centralityPlot(GraphMGMCENT, include = c("Strength"), scale = "raw",
orderBy = "Strength")
dev.off()
#Shortest Path Lenght
SPLMGM <- centrality(GraphMGM)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
#Average shortest path length
ASPL_MGM <- mean(SPLMGM)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(tidyverse, here, sjlabelled, stringr, glue, EGAnet, janitor, haven,
ggpubr, gridExtra, dplyr, GGally, qgraph, sjmisc, igraph,
imager, grid, psych, stargazer, mgm, patchwork, ggplot2,
NetworkComparisonTest, Matrix, bootnet, matrixcalc, openxlsx, devtools)
W3 = readRDS((here("Input", "W3.rds")))
View(W3)
type <-c("g","g","c","g","c","g","g","g","g","g","g","g","g","g","c","c","g","c"
"g","c","c","g","g","g")
library("pacman")
p_load(tidyverse, here, sjlabelled, stringr, glue, janitor, haven, stargazer,
ltm, skimr)
#Load database
#response_original = read_dta(here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.dta"))  %>%
#clean_names()
#Transform in RDS
#saveRDS(response_original, here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.rds"))
#Import RDS
response_original = read_rds(here("Input", "v1.0_ResPOnsE_COVID_19_W1-W4-2.rds"))  %>%
clean_names()
# 10 November to 22 December 2021
#Select and rename variables
W3 = response_original %>%
filter(info_wave==3) %>%
dplyr::select(c(v2,v3,j5_01,v1,f10,f3,f9,h1_04,j4bis_b,b2_03,b2_06,b2_07,d5,d1,
e4_bis,k3_03,k3_04,k3_05,e2_01,e2_04,j5_02,e3,g7,c5,s1,s2,
s9,s8,c1)) %>%
mutate(across(v2:c1, ~replace(., .>97 , NA))) %>%
na.omit()
colnames(W3) = c("vac","vac_int","vac_bad","vac_ob","worry","risk","conspiracy",
"nat","h_locus","comp_dist", "comp_mask","comp_hand","he_eco",
"judg_gov_covid","judg_gov","PTV_L","PTV_5SM","PTV_BOI","tr_par",
"tr_EU","tr_sci","tr_h","pray","media","sex","age","educ",
"reg","eco_insec")
#combine vac_int and vac in INT_VAC
W3 = W3 %>%
mutate(hesitancy = case_when(
(vac_int < 3  | vac == 1)~ 0,
(vac_int > 2 & vac == 2)~ 1,)) %>%
dplyr::select(-c(vac_int, vac))
#invert polarity and recode
W3 = W3 %>%
mutate((across(vac_bad:vac_ob, ~ 6 - .)), #inverted polarity
worry = ifelse(worry<=2, 0, 1),
(across(risk,  ~ 6 - .)), #inverted
conspiracy = ifelse(conspiracy<3, 1, 0),
(across(he_eco,  ~ 11 - .)), #inverted
(across(tr_sci,  ~ 6 - .)), #inverted
(across(pray,  ~ 6 - .)), #inverted
media = ifelse(media>=4 & media<=7, 1, 0),
sex = ifelse(sex==2, 0, 1),
educ = ifelse(educ<5, 0, 1),
reg = ifelse(reg<=3, 1, 0),
eco_insec = ifelse(eco_insec<=2, 0, 1))
#PCA
#compliance
compliance = data.frame(W3$comp_mask, W3$comp_hand, W3$comp_dist)
compliance = na.omit(compliance)
pr_compliance <- princomp(na.omit(compliance), cor = TRUE)
pr_compliance #unidimensional
W3$comp = apply(W3[8:10], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(comp_hand, comp_mask, comp_dist))
#Gov
gov = data.frame(W3$judg_gov_covid, W3$judg_gov)
gov = na.omit(gov)
pr_gov <- princomp(na.omit(gov), cor = TRUE)
pr_gov #unidimensional
W3$gov = apply(W3[9:10], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(judg_gov_covid, judg_gov))
#inst_tr (excluded from core)
inst_tr = data.frame(W3$tr_par, W3$tr_EU)
inst_tr = na.omit(inst_tr)
pr_inst_tr <- princomp(na.omit(inst_tr), cor = TRUE)
pr_inst_tr #unidimensional
W3$inst_tr = apply(W3[12:13], 1, mean, na.rm = TRUE)
W3 = W3 %>%
dplyr::select(-c(tr_par, tr_EU))
#alphas
cronbach.alpha(compliance, CI=TRUE, standardized=TRUE)
cronbach.alpha(gov, CI=TRUE, standardized=TRUE)
cronbach.alpha(inst_tr, CI=TRUE, standardized=TRUE)
summary_vaccine  = as.data.frame(skim(W3))
stargazer(as.data.frame(W3), type = "text", nobs = TRUE)
saveRDS(W3, here("Input", "W3.rds"))
