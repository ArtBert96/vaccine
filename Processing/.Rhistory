layout = L, theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
#cut = 0.10,
minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_edu0, color= cols_0,
legend = FALSE, borders = FALSE, title = "Low education")
graph_1<-qgraph(inputgraph_1,
layout = L, theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
#cut = 0.10,
minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_edu1, color= cols_1,
legend = FALSE, borders = FALSE,  title = "High education")
dev.off()
#graph
#input
egpclass0Fit <- mgm(egpclass0, type, level, k = 2, binarySign = TRUE)
egpclass1Fit <- mgm(egpclass1, type, level, k = 2, binarySign = TRUE)
inputNCT_egpclass <- egpclass1Fit$pairwise$wadj - egpclass0Fit$pairwise$wadj
inputNCT_egpclass[upper.tri(inputNCT_egpclass)][which(NCT_egpclass$einv.pvals$`p-value`>= .05)] <- 0
inputNCT_egpclass <- forceSymmetric(inputNCT_egpclass)
#plot
dir.create('../Output/H2/egpclass')
pdf(file = '../Output/H2/egpclass/NCT_egpclass.pdf', paper = "USr",
height = 9, width = 12)
qgraph(inputNCT_egpclass, layout = "spring", edge.labels = TRUE, esize = 1, vsize = 4,
theme = "Borkulo", labels = shortnames, nodeNames = longnames,
legend = TRUE, legend.cex = 0.3)
dev.off()
# Centrality comparison
#egpclass0
egpclass0_cent<-qgraph(egpclass0Fit$pairwise$wadj,
layout = "spring", theme = "colorblind",
labels = longnames, minimum = 0,
cut = 0.10, maximum = 1, details = TRUE,
legend = FALSE)
#centrality Total
cent_egpclass0 <- centralityTable(egpclass0_cent,standardized = FALSE)
centralityPlot(egpclass0_cent, include = c("Strength"),scale = "raw",
orderBy = "Strength")
#egpclass1
egpclass1_cent<-qgraph(egpclass1Fit$pairwise$wadj,
layout = "spring", theme = "colorblind",
labels = longnames, minimum = 0,
cut = 0.10, maximum = 1, details = TRUE,
legend = FALSE)
#centrality Total
cent_egpclass1 <- centralityTable(egpclass1_cent,standardized = FALSE)
centralityPlot(egpclass1_cent, include = c("Strength"),scale = "raw",
orderBy = "Strength")
#comparison
pdf(file= '../Output/H2/egpclass/centrality_egpclass.pdf')
centralityPlot(list(Low=egpclass0_cent, High=egpclass1_cent), include = c("Strength"),
scale = "raw", orderBy = "Strength")
dev.off()
#Graph detected comm
inputComm_egpclass0<-Comm_egpclass0$communityOverlap
inputComm_egpclass0[which(inputComm_egpclass0 <= .90)] <- 0
pdf(file = '../Output/H2/egpclass/communities_egpclass0.pdf',paper = "USr",
height = 9, width = 12)
qgraph(inputComm_egpclass0, layout = "spring", theme = "Borkulo",
labels = shortnames, nodeNames = longnames, vsize=4.0,
edge.labels=FALSE, legend = TRUE, legend.cex = 0.3)
dev.off()
inputComm_egpclass1<-Comm_egpclass1$communityOverlap
inputComm_egpclass1[which(inputComm_egpclass1 <= .90)] <- 0
pdf(file = '../Output/H2/egpclass/communities_egpclass1.pdf',paper = "USr",
height = 9, width = 12)
qgraph(inputComm_egpclass1, layout = "spring", theme = "Borkulo",
labels = shortnames, nodeNames = longnames, vsize=4.0,
edge.labels=FALSE, legend = TRUE, legend.cex = 0.3)
dev.off()
group_egpclass0 <- list(
" "=c(1),
" "=c(2,3),
" "=c(4),
" "=c(5),
" "=c(6,7),
" "=c(8,9,10),
" "=c(11,14,15,18),
" "=c(12,13),
" "=c(16,17),
" "=c(19),
" "=c(20:23))
cols_0 <-  c("grey","#FBB4AE", "#DECBE4", "#FFFFCC", "#CCEBC5", "#FED9A6", "#FDDAEC", "#E5D8BD", "#F894AE", "#CC9BC5", "#B3CDE3")
group_egpclass1 <- list(
" "=c(1,5,6,7),
" "=c(2),
" "=c(3,4,20,21,23),
" "=c(22),
" "=c(8,9,10),
" "=c(11:19))
cols_1 <-  c("#CCEBC5", "#DECBE4", "#B3CDE3", "#FBB4AE", "#FED9A6", "#FDDAEC")
## Prepare plot
inputgraph_0 <- egpclass0Fit$pairwise$wadj
signs_0 <- egpclass0Fit$pairwise$signs
signs_0[which(is.na(signs_0))] <- 1
inputgraph_0 <- inputgraph_0*signs_0
pdf(file = '../Output/H2/egpclass/egpclass0.pdf', paper = "USr", height = 9, width = 12)
graph_0<-qgraph(inputgraph_0,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
cut = 0.10, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_egpclass0, color= cols_0,
legend = TRUE, legend.cex = 0.2)
dev.off()
inputgraph_1 <- egpclass1Fit$pairwise$wadj
signs_1 <- egpclass1Fit$pairwise$signs
signs_1[which(is.na(signs_1))] <- 1
inputgraph_1 <- inputgraph_1*signs_1
pdf(file = '../Output/H2/egpclass/egpclass1.pdf', paper = "USr", height = 9, width = 12)
graph_1<-qgraph(inputgraph_1,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
cut = 0.10, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_egpclass1, color= cols_1,
legend = TRUE, legend.cex = 0.2)
dev.off()
#multiplot
pdf(file= '../Output/H2/egpclass/COMPARISON.pdf', paper = "USr",
height = 9, width = 12)
L<-averageLayout(graph_0,graph_1)
lmat <- matrix(1:2, 1)
lo <- layout(lmat, width = c(1, 1))
graph_0<-qgraph(inputgraph_0,
layout = L, theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
#cut = 0.10,
minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_egpclass0, color= cols_0,
legend = FALSE, borders = FALSE, title = "Manual social class")
graph_1<-qgraph(inputgraph_1,
layout = L, theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
#cut = 0.10,
minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_egpclass1, color= cols_1,
legend = FALSE, borders = FALSE,  title = "Non-manual social class")
dev.off()
#graph
#input
subclass0Fit <- mgm(subclass0, type, level, k = 2, binarySign = TRUE)
subclass1Fit <- mgm(subclass1, type, level, k = 2, binarySign = TRUE)
inputNCT_subclass <- subclass1Fit$pairwise$wadj - subclass0Fit$pairwise$wadj
inputNCT_subclass[upper.tri(inputNCT_subclass)][which(NCT_subclass$einv.pvals$`p-value`>= .05)] <- 0
inputNCT_subclass <- forceSymmetric(inputNCT_subclass)
#plot
dir.create('../Output/H2/subclass')
pdf(file = '../Output/H2/subclass/NCT_subclass.pdf', paper = "USr",
height = 9, width = 12)
qgraph(inputNCT_subclass, layout = "spring", edge.labels = TRUE, esize = 1, vsize = 4,
theme = "Borkulo", labels = shortnames, nodeNames = longnames,
legend = TRUE, legend.cex = 0.3)
dev.off()
# Centrality comparison
#subclass0
subclass0_cent<-qgraph(subclass0Fit$pairwise$wadj,
layout = "spring", theme = "colorblind",
labels = longnames, minimum = 0,
cut = 0.10, maximum = 1, details = TRUE,
legend = FALSE)
#centrality Total
cent_subclass0 <- centralityTable(subclass0_cent,standardized = FALSE)
centralityPlot(subclass0_cent, include = c("Strength"),scale = "raw",
orderBy = "Strength")
#subclass1
subclass1_cent<-qgraph(subclass1Fit$pairwise$wadj,
layout = "spring", theme = "colorblind",
labels = longnames, minimum = 0,
cut = 0.10, maximum = 1, details = TRUE,
legend = FALSE)
#centrality Total
cent_subclass1 <- centralityTable(subclass1_cent,standardized = FALSE)
centralityPlot(subclass1_cent, include = c("Strength"),scale = "raw",
orderBy = "Strength")
#comparison
pdf(file= '../Output/H2/subclass/centrality_subclass.pdf')
centralityPlot(list(Low=subclass0_cent, High=subclass1_cent), include = c("Strength"),
scale = "raw", orderBy = "Strength")
dev.off()
#Graph detected comm
inputComm_subclass0<-Comm_subclass0$communityOverlap
inputComm_subclass0[which(inputComm_subclass0 <= .90)] <- 0
pdf(file = '../Output/H2/subclass/communities_subclass0.pdf',paper = "USr",
height = 9, width = 12)
qgraph(inputComm_subclass0, layout = "spring", theme = "Borkulo",
labels = shortnames, nodeNames = longnames, vsize=4.0,
edge.labels=FALSE, legend = TRUE, legend.cex = 0.3)
dev.off()
inputComm_subclass1<-Comm_subclass1$communityOverlap
inputComm_subclass1[which(inputComm_subclass1 <= .90)] <- 0
pdf(file = '../Output/H2/subclass/communities_subclass1.pdf',paper = "USr",
height = 9, width = 12)
qgraph(inputComm_subclass1, layout = "spring", theme = "Borkulo",
labels = shortnames, nodeNames = longnames, vsize=4.0,
edge.labels=FALSE, legend = TRUE, legend.cex = 0.3)
dev.off()
group_subclass0 <- list(
" "=c(1:5),
" "=c(6:7),
" "=c(8,9,10),
" "=c(11,14,15),
" "=c(16,18),
" "=c(12,13,17,19),
" "=c(20:23))
cols_0 <-  c("#FED9A6", "#DECBE4", "#FFFFCC", "#CCEBC5", "#E5D8BD", "#FBB4AE", "#FDDAEC")
group_subclass1 <- list(
" "=c(1:5),
" "=c(6:10),
" "=c(11,15,22),
" "=c(12,13,14,16,17,18,19),
" "=c(20:21,23))
cols_1 <- c("#FED9A6","#DECBE4","#CCEBC5","#FBB4AE","#FDDAEC" )
## Prepare plot
inputgraph_0 <- subclass0Fit$pairwise$wadj
signs_0 <- subclass0Fit$pairwise$signs
signs_0[which(is.na(signs_0))] <- 1
inputgraph_0 <- inputgraph_0*signs_0
pdf(file = '../Output/H2/subclass/subclass0.pdf', paper = "USr", height = 9, width = 12)
graph_0<-qgraph(inputgraph_0,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
cut = 0.10, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_subclass0, color= cols_0,
legend = TRUE, legend.cex = 0.2)
dev.off()
inputgraph_1 <- subclass1Fit$pairwise$wadj
signs_1 <- subclass1Fit$pairwise$signs
signs_1[which(is.na(signs_1))] <- 1
inputgraph_1 <- inputgraph_1*signs_1
pdf(file = '../Output/H2/subclass/subclass1.pdf', paper = "USr", height = 9, width = 12)
graph_1<-qgraph(inputgraph_1,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
cut = 0.10, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_subclass1, color= cols_1,
legend = TRUE, legend.cex = 0.2)
dev.off()
#multiplot
pdf(file= '../Output/H2/subclass/COMPARISON.pdf', paper = "USr",
height = 9, width = 12)
L<-averageLayout(graph_0,graph_1)
lmat <- matrix(1:2, 1)
lo <- layout(lmat, width = c(1, 1))
graph_0<-qgraph(inputgraph_0,
layout = L, theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
#cut = 0.10,
minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_subclass0, color= cols_0,
legend = FALSE, borders = FALSE, title = "Low subjective social class")
graph_1<-qgraph(inputgraph_1,
layout = L, theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
#cut = 0.10,
minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_subclass1, color= cols_1,
legend = FALSE, borders = FALSE,  title = "High subjective social class")
dev.off()
#graph
#input
socmob0Fit <- mgm(socmob0, type, level, k = 2, binarySign = TRUE)
socmob1Fit <- mgm(socmob1, type, level, k = 2, binarySign = TRUE)
inputNCT_socmob <- socmob1Fit$pairwise$wadj - socmob0Fit$pairwise$wadj
inputNCT_socmob[upper.tri(inputNCT_socmob)][which(NCT_socmob$einv.pvals$`p-value`>= .05)] <- 0
inputNCT_socmob <- forceSymmetric(inputNCT_socmob)
#plot
dir.create('../Output/H2/socmob')
pdf(file = '../Output/H2/socmob/NCT_socmob.pdf', paper = "USr",
height = 9, width = 12)
qgraph(inputNCT_socmob, layout = "spring", edge.labels = TRUE, esize = 1, vsize = 4,
theme = "Borkulo", labels = shortnames, nodeNames = longnames,
legend = TRUE, legend.cex = 0.3)
dev.off()
# Centrality comparison
#socmob0
socmob0_cent<-qgraph(socmob0Fit$pairwise$wadj,
layout = "spring", theme = "colorblind",
labels = longnames, minimum = 0,
cut = 0.10, maximum = 1, details = TRUE,
legend = FALSE)
#centrality Total
cent_socmob0 <- centralityTable(socmob0_cent,standardized = FALSE)
centralityPlot(socmob0_cent, include = c("Strength"),scale = "raw",
orderBy = "Strength")
#socmob1
socmob1_cent<-qgraph(socmob1Fit$pairwise$wadj,
layout = "spring", theme = "colorblind",
labels = longnames, minimum = 0,
cut = 0.10, maximum = 1, details = TRUE,
legend = FALSE)
#centrality Total
cent_socmob1 <- centralityTable(socmob1_cent,standardized = FALSE)
centralityPlot(socmob1_cent, include = c("Strength"),scale = "raw",
orderBy = "Strength")
#comparison
pdf(file= '../Output/H2/socmob/centrality_socmob.pdf')
centralityPlot(list(Low=socmob0_cent, High=socmob1_cent), include = c("Strength"),
scale = "raw", orderBy = "Strength")
dev.off()
#Graph detected comm
inputComm_socmob0<-Comm_socmob0$communityOverlap
inputComm_socmob0[which(inputComm_socmob0 <= .90)] <- 0
pdf(file = '../Output/H2/socmob/communities_socmob0.pdf',paper = "USr",
height = 9, width = 12)
qgraph(inputComm_socmob0, layout = "spring", theme = "Borkulo",
labels = shortnames, nodeNames = longnames, vsize=4.0,
edge.labels=FALSE, legend = TRUE, legend.cex = 0.3)
dev.off()
inputComm_socmob1<-Comm_socmob1$communityOverlap
inputComm_socmob1[which(inputComm_socmob1 <= .90)] <- 0
pdf(file = '../Output/H2/socmob/communities_socmob1.pdf',paper = "USr",
height = 9, width = 12)
qgraph(inputComm_socmob1, layout = "spring", theme = "Borkulo",
labels = shortnames, nodeNames = longnames, vsize=4.0,
edge.labels=FALSE, legend = TRUE, legend.cex = 0.3)
dev.off()
group_socmob0 <- list(
" "=c(1:7),
" "=c(8,9,10),
" "=c(11,14,15),
" "=c(12,13,16,17,18,19),
" "=c(20:23))
cols_0 <- c("#FED9A6","#DECBE4","#FFFFCC","#CCEBC5","#FBB4AE","#FDDAEC" )
group_socmob1 <- list(
" "=c(1,5),
" "=c(2,3),
" "=c(6,7),
" "=c(8,9,10),
" "=c(11:15,18),
" "=c(16,17,19),
" "=c(4,20:21,23),
" "=c(22))
cols_1 <-  c("#FED9A6", "#DECBE4", "#FFFFCC", "#CCEBC5", "#E5D8BD", "#B3CDE3", "#FBB4AE", "#FDDAEC")
## Prepare plot
inputgraph_0 <- socmob0Fit$pairwise$wadj
signs_0 <- socmob0Fit$pairwise$signs
signs_0[which(is.na(signs_0))] <- 1
inputgraph_0 <- inputgraph_0*signs_0
pdf(file = '../Output/H2/socmob/socmob0.pdf', paper = "USr", height = 9, width = 12)
graph_0<-qgraph(inputgraph_0,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
cut = 0.10, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_socmob0, color= cols_0,
legend = TRUE, legend.cex = 0.2)
dev.off()
inputgraph_1 <- socmob1Fit$pairwise$wadj
signs_1 <- socmob1Fit$pairwise$signs
signs_1[which(is.na(signs_1))] <- 1
inputgraph_1 <- inputgraph_1*signs_1
pdf(file = '../Output/H2/socmob/socmob1.pdf', paper = "USr", height = 9, width = 12)
graph_1<-qgraph(inputgraph_1,
layout = "spring", theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
cut = 0.10, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_socmob1, color= cols_1,
legend = TRUE, legend.cex = 0.2)
dev.off()
#multiplot
pdf(file= '../Output/H2/socmob/COMPARISON.pdf', paper = "USr",
height = 9, width = 12)
L<-averageLayout(graph_0,graph_1)
lmat <- matrix(1:2, 1)
lo <- layout(lmat, width = c(1, 1))
graph_0<-qgraph(inputgraph_0,
layout = L, theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
#cut = 0.10,
minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_socmob0, color= cols_0,
legend = FALSE, borders = FALSE, title = "Downward or no subjective social mobility")
graph_1<-qgraph(inputgraph_1,
layout = L, theme = "Borkulo",
labels = shortnames,nodeNames = longnames,
#cut = 0.10,
minimum = 0.05, maximum = 1,
details = FALSE, vsize=6.0,
groups=group_socmob1, color= cols_1,
legend = FALSE, borders = FALSE,  title = "Upward subjective social mobility")
dev.off()
#income
inputNCT_income_abs = abs(inputNCT_income)
sum_income_c = colSums(inputNCT_income_abs)
sum_income = sum(sum_income_c)
#educ
inputNCT_edu_abs = abs(inputNCT_edu)
sum_edu_c = colSums(inputNCT_edu_abs)
sum_edu = sum(sum_edu_c)
#egpclass
inputNCT_egpclass_abs = abs(inputNCT_egpclass)
sum_egpclass_c = colSums(inputNCT_egpclass_abs)
sum_egpclass = sum(sum_egpclass_c)
#subclass
inputNCT_subclass_abs = abs(inputNCT_subclass)
sum_subclass_c = colSums(inputNCT_subclass_abs)
sum_subclass = sum(sum_subclass_c)
#socmob
inputNCT_socmob_abs = abs(inputNCT_socmob)
sum_socmob_c = colSums(inputNCT_socmob_abs)
sum_socmob = sum(sum_socmob_c)
#Graph
graph_edgew = tibble(variable = c("Income", "Education level", "Social class", "Subjective social class",
"Subjective social mobility"),
dif = c(sum_income, sum_edu, sum_egpclass, sum_subclass, sum_socmob)) %>%
arrange(desc(dif)) %>%
ggplot(aes(x=reorder(variable, -dif), y = dif, fill=variable)) +
geom_bar(stat="identity") +
geom_text(aes(label=round(dif,2)), vjust=-0.5, size=3) +
labs(y = "Differences in edge weights", x="Stratification measures") +
scale_y_continuous(limits = c(0,5)) +
theme_nice() +
theme(legend.position = "none") +
scale_fill_brewer(palette = "Pastel1")
ggsave(here("Output", "H2", "graph_edgew.jpg"), graph_edgew, height = 6, width = 10)
graph_edgew
#Income
SPLMGM <- centrality(income0_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_income0 <- mean(SPLMGM)
SPLMGM <- centrality(income1_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_income1 <- mean(SPLMGM)
#edu
SPLMGM <- centrality(edu0_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_edu0 <- mean(SPLMGM)
SPLMGM <- centrality(edu1_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_edu1 <- mean(SPLMGM)
#EGP
SPLMGM <- centrality(egpclass0_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_egp0 <- mean(SPLMGM)
SPLMGM <- centrality(egpclass1_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_egp1 <- mean(SPLMGM)
#subclass
SPLMGM <- centrality(subclass0_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_subcl0 <- mean(SPLMGM)
SPLMGM <- centrality(subclass1_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_subcl1 <- mean(SPLMGM)
#soc mob
SPLMGM <- centrality(socmob0_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_socmob0 <- mean(SPLMGM)
SPLMGM <- centrality(socmob1_cent)$ShortestPathLengths
SPLMGM <- SPLMGM[upper.tri(SPLMGM)]
ASPL_socmob1 <- mean(SPLMGM)
##Graph
ASPL_table = data.frame(Variable = c("Income", "Income",
"Education level", "Education level",
"Social class","Social class",
"Subjective social class", "Subjective social class",
"Subjective social mobility","Subjective social mobility"),
Level = c("Low", "High",
"Low", "High",
"Low", "High",
"Low", "High",
"Low", "High"),
ASPL = c(ASPL_income0, ASPL_income1,
ASPL_edu0, ASPL_edu1,
ASPL_egp0, ASPL_egp1,
ASPL_subcl0, ASPL_subcl1,
ASPL_socmob0, ASPL_socmob1))
# Helper function for string wrapping.
# Default 20 character target width.
swr = function(string, nwrap=15) {
paste(strwrap(string, width=nwrap), collapse="\n")
}
swr = Vectorize(swr)
# Create line breaks in Year
ASPL_table$Variable_r = swr(ASPL_table$Variable)
graph_connectivity = ggplot(ASPL_table, aes(y=ASPL, x=Level, fill=Variable_r)) +
geom_bar(position="dodge", stat="identity") +
geom_text(aes(label=round(ASPL,2)), vjust=-0.5, size=3) +
facet_grid(~Variable_r) +
labs(y = "ASPL", x="", caption = "Differences between high and low groups are not statistically significant for any variable") +
scale_y_continuous(limits = c(0,20)) +
theme_nice() +
theme(legend.position = "none", plot.caption = element_text(hjust = 0.5)) +
scale_fill_brewer(palette = "Pastel1")
ggsave(here("Output", "H2", "graph_connectivity.jpg"), graph_connectivity, height = 6, width = 10)
graph_connectivity
#THIS DIDN T WORK
#income
c_income0 = cent_income0 %>%
filter(measure=="Strength") %>%
select(node, value) %>%
cbind(NCT_income$diffcen.pval) %>%
rename(pvalue = strength) %>%
filter(pvalue<=0.05) %>%
rownames_to_column("name") %>%
mutate(measure = "Income",
group = "Low")
saveRDS(Comm_income0, here("Input", "NCT", "results", "detected_comm", "Comm_income0.rds"))
saveRDS(NCT_income, here("Input", "NCT", "results", "NCT_income.rds"))
